|check {1 .: + .is 2}
|check {1 3 5 :. + .is 4}
|check {1 3 :: - .is 2}

|check {_.type .is Nil}
|check {Nil.isa A .is _}
|check {Nil.isa A? .is A?}

|check {42.type .is Int}
|check {Int.isa A .is Num}

|check {F |or 42 .is 42}
|check {42 |or T .is 42}

|check {F |and 42 .is F}
|check {T |and 42 .is 42}

|check {T |if {42} .is 42}
|check {F |else {42} .is 42}

|check {6.* 7 .is 42}

|check {42.= 42.0 not}

|check {1.< 3}
|check {3.> 1}

{
  |let foo 42
  |check {foo.is 42}
}

|check {1 3, type.isa Pair}
|check {|,1 3,, + .is 4}

dump-stack