* fix bad cast
** 6 7 *
* move ,/,, to reader
** bring back pair/unpair form/op
* --
* inherit Form from Val
** add form types to cx/abc
* inherit Macro from Method
** push forms on stack in expand, then call
** return form to compile
** add rets to add_macro
* --
* add int math ops
* add ref-support
** &foo
** IdForm or "Invalid ref: "
** add RefForm
** resolve at compile time
* add |-support for values
** eval on compile stack in Lit.compile if cte
*** wrap separate stack around cx.compile
* add stack ops
** .: dup
** :. drop 
** :: swap
** extract bool id_char(char) from read_id
** return DotForm if followed by is_id
* add ScopeForm
** {...}
** add support for ;
* add else macro
* add method macro
* add isa/type-of methods
* add stack literals
** (1 2 3; 4 5)
** parse suffix as separate stack
* add support for arg index
** add Arg.index + constructor
** dump as T0 T1 etc.
** get parent type from stack in Method.applicable()
* add abc/=
** map to Val.eq
** use arg index
* add check macro
* add /test/run.f2
* add opt types
** Int?
** add nil type / _
** add Type *Type.opt_type
*** return this if opt
* add quote
** '(1 2 3) 'foo
** handle in reader
* add C++ emit
** use label/goto
** add -build mode
* add Macro.method
** wrap macro imp in method
** call instead of expand if not cte in IdForm.compile
