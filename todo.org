* add recall macro
** only allow client methods
** optional target
*** current if nil
**** goto beg_pc
*** perform dispatch if set
** bench/fib_tail
* --
* implement Nil unquote as ref(cx.nil_form)
* implement Form unquote as ref(*this)
* move nil (_) from reader to scope like T/F
** add scope lookup in read_id
* ---
* add let-id
** let-id foo 
** bind unique symbol with name as prefix
** add to readme
* --
* add enum
** add UserType
*** override Val methods to dispatch if != set.root.next
** add EnumType < UserType
** enum Month (JAN ... DEC)
** bind members in scope
** provide conversion to-from int
* --
* add Date type
** 1977 JUL 5 date.+{23 59 59 time}
** add date/time constructors
** add Timestamp +/- Time
** add today/now
* --
* convert is/isa/not/type to macros/ops
* plug valgrind quote memory leak
* add Form.eq overrides
* add macro arg typecheck
** fix types in abc/math
* add next-method
** search call chain for method call
*** return next from method.set
**** _ if missing
* add stash/splat
* add loop macro
** loop until break
** add LoopOp
** add LoopOp *cx.loop;
** add break macro
*** skip to end
* add stack splice
** (1 3 5 (%{+})) -> (1 (8))
* implement MethodSet.clone
** switch to use vector/upper_bound like env
*** drop method Node
* reimplement read_int manually like read_frac
** keep hex support
* add switch
** scratch
** use branch op
*** pop_if = true
** add jump op
* add Byte type
** Imp = uint8_t
** read hex as byte if < 256
** add int/byte conversions
* add Char type
** cidk
** add reader support
*** \r \n \t \s \e
*** \0x2a \90 \\A \\a \\\
** add conversion to/from int/byte
* add string type
* add say method
** add val.print
*** default to dump
*** print symbols with quote
*** print stack items in sequence
*** print pair items separated by space
* add -unsafe
** add unsafe {} macro
* add C++ emit
** add -build mode
** use label/goto
