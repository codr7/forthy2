* add env.add_macro(args...)
* add Val.clone(Cx &)
** call from push op
* add else macro
* add method macro
* add reader
** use .: for dup, :. for drop and :: for swap
** read () and {} as separate tokens
* add quote
** '(1 2 3) 'foo
** handle in reader
* add stack literals
** (1 2 3; 4 5)
** parse suffix as separate stack/expr
* add pair literals
** 1,2
* add type.derive/is_a
* add generic dispatch
** add call op
** add dispatch op
** add type dispatch_weight
** sort by weight & pick first match
* add cx.call
** add Call struct with prev ptr
* add Val move constructors
** also add to critical types
* perform stack analysis on compile
** convert dispatch to call
* add C++ emit
** emit as nested switch
*** each expr gets its own switch
** add string Sym.emit_id
*** lazy gen from name
** add -build mode
