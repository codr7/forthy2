* finish |-support
** add call op
*** get method from stack
** add Macro.method
** wrap macro imp in method
** call instead of expand if not cte in IdForm.compile
** eval on compile stack in Lit.compile if cte
*** wrap separate stack around cx.compile
* add dispatch_op
* --
* rename add_macro to add_op_macro
** add imp arg
* add Env.add_form_macro
** build on top of add_op_macro
*** compile returned form as result
* --
* add meta types
** create automatically in Type unless meta
* add else macro
* add method macro
** use .: for dup, :. for drop and :: for swap
** read () and {} as separate tokens
* add generic dispatch
** add call op
** add dispatch op
** sort by reverse weight & pick first match
* add quote
** '(1 2 3) 'foo
** handle in reader
* add stack literals
** (1 2 3; 4 5)
** parse suffix as separate stack
* add pair literals
** 1,2
* add type.derive/is_a
* add cx.call
** add Call struct with prev ptr
* add Val move constructors
** also add to critical types
* perform stack analysis on compile
** convert dispatch to call
* add C++ emit
** use labels/goto
** add string Sym.emit_id
*** lazy gen from name
** add -build mode
