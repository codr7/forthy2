* add postfix pairing using ,
** emit id form in read_form if followed by ',' and != ','
** print pairs as 'a b,'
** add method
** add pair tests
* change dup/drop/swap to macros
** add ops
* add scope support for ;
** compile as separate scope
* inherit macro from method
** add separate imp
** use dispatch for expand
* reimplement read_int manually like read_frac
** keep hex support
* add else macro
* add method macro
** clone env on compile
** compile body with_env on first use
* add clock macro/op
** pop reps from stack
* add stack literals
** (1 2 3; 4 5)
** parse suffix as separate stack
* --
* add MethodSet.nargs
** add constructor arg
** add test in add_method
** push first instead of set in id compile if !nargs
* add support for arg index
** add Arg.index/index_id + constructor
** dump as ,foo Int
** method =(,t A t)
** fill map<id, index> during read
** perform separate pass to get indexes from map
** get parent type from stack by index in Method.applicable()
* add static array of Int[100]
** override int_type.get
* add ref-support
** &foo
** IdForm or "Invalid ref: "
** add RefForm
** resolve at compile time
* add |-support for values
** eval on compile stack in Lit.compile if cte
* unlink existing method if exists in MethodSet.push
* add quote
** '(1 2 3) 'foo
* add C++ emit
** add -build mode
** use label/goto
